/*! DOMTokenlist shim | Copyright 2016 Jonathan Wilsson and Bogdan Chadkin. */
!function(t,n){"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?module.exports=n():t.DOMTokenList=n()}(this,function(){"use strict";var t=[],n=function(n,e){var r;if(t.indexOf)return t.indexOf.call(n,e);for(r=0;r<n.length;r++)if(n[r]===e)return r;return-1},e=function(t){var n=/[\u0009\u000A\u000C\u000D\u0020]/;if(""===t||n.test(t))throw new Error("Token must not be empty or contain whitespace.")},r=function(t,n){var e,r=this,o=[];if(t&&n&&(r.element=t,r.prop=n,t[n]))for(o=t[n].replace(/^\s+|\s+$/g,"").split(/\s+/),e=0;e<o.length;e++)r[e]=o[e];r.length=o.length};return r.prototype={add:function(){var n,r=this,o=arguments;for(n=0;n<o.length;n++)e(o[n]),r.contains(o[n])||t.push.call(r,o[n]);r.element&&(r.element[r.prop]=r)},contains:function(t){return e(t),-1!==n(this,t)},item:function(t){return this[t]||null},remove:function(){var r,o,i=arguments,u=this;for(o=0;o<i.length;o++)e(i[o]),r=n(u,i[o]),-1!==r&&t.splice.call(u,r,1);u.element&&(u.element[u.prop]=u)},toggle:function(t,n){var e=this;return e.contains(t)?n?!0:(e.remove(t),!1):n===!1?!1:(e.add(t),!0)},toString:function(){return t.join.call(this," ")}},r});